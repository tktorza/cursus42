{% extends 'ClabBoardBundle:Base:base.html.twig' %}
 {% block stylesheets %}
 {{ parent() }}
     <link rel="stylesheet" type="text/css" href="{{ asset('vendors/bootstrap-daterangepicker/daterangepicker.css')}}" />
     <link rel="stylesheet" type="text/css" href="{{ asset('vendors/nvd3/build/nv.d3.min.css')}}" />
     <link rel="stylesheet" type="text/css" href="{{ asset('vendors/datatables.net-dt/css/jquery.dataTables.min.css') }}">
     <link rel="stylesheet" type="text/css" href="{{ asset('vendors/datatables.net-responsive-dt/css/responsive.dataTables.min.css')}}" />
 {% endblock %}
{% block subnav %}
    {% include 'ClabBoardBundle:Base:subnav.html.twig' with {
        category: 'sales',
        route: 'board_sales_reporting',
    } %}
{% endblock %}

{% block body %}
<div class="container padding-v-10" id="sales">

    <form method="get" action="{{ path('board_sales_reporting_category', { contextPk: contextPk }) }}">
    <div class="row">
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-8">
<h2>Rapports des ventes</h2>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-6">
            <input id="reportrange" name="range" type="text" class="form-control pull-right" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc; width: 100%">
                    </div>
                <div class="col-md-4">
            <button type="submit" class="btn btn-lg btn-block btn-primary">Filtrer</button>
                    </div>
        </div>
    </div>
        </div>
    </form>
<div class="row">
       <div class="col-md-8">
            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-5">
                                <h3 class="panel-title">
                                    CA sur la période : <b>{{ results.price }}  € </b>
                                </h3>
                            </div>
                            <div class="col-xs-3 no-padding">
                                <select id="dataToShow" class="form-control">
                                    <option>Nombre d'éléments</option>
                                    {% for i in 3..categories|length if i<=8%}
                                    <option value="{{ i }}">{{ i }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                            <div class="col-xs-4">
                                <select id="toShow"  class="form-control">
                                    <option value="#chart">Ratio ventes</option>
                                    <option value="#chart2">Chiffre d'affaires</option>
                                    <option value="#chart3">Quantité vendue</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
       </div>
        <div class="col-md-4  pull-right">
                <div class="btn-group">
                <a href="{{ path('board_sales_reporting',{contextPk:contextPk}) }}" class="btn" style="border: solid
                1px;">Global</a>

                 <a href="{{ path('board_sales_reporting_product',{contextPk:contextPk}) }}" class="btn" style="border: solid 1px;">Produits</a>
                  <button type="button" class="btn btn-primary">Catégories</button>
            </div>
        </div>
    </div>
    <div class="row">
        <div id="chart" style="height: 400px;"><svg></svg></div>
    </div>
    <div class="row">
        <div id="chart2" style="height: 400px;" hidden><svg></svg></div>
    </div>
    <div class="row">
        <div id="chart3" style="height: 400px;" hidden><svg></svg></div>
    </div>
    <section class="panel">
        <div class="panel-body" id="categoryTable">
            <table class="table table-stripped table-bordered table-hover display responsive" id="datatable" width="100%">
                <thead>
                <th class="search"><input type="text" placeholder="Rechercher" style="width:100%;"/></th>
                <th class="search"><input type="text" placeholder="Rechercher" style="width:100%;"/></th>
                <th class="search"><input type="text" placeholder="Rechercher" style="width:100%;"/></th>
                <th class="search"><input type="text" placeholder="Rechercher" style="width:100%;"/></th>
                </thead>
                <thead>
                    <th>Categories</th>
                    <th>Quantité vendue</th>
                    <th>Total TTC (€)</th>
                    <th>Sources</th>
                </thead>
                <tbody>
                    {% for category in categories %}
                        <tr>
                            <td>
                                {{ category.name }}
                            </td>
                            <td>
                                {{ category.quantity }}
                            </td>
                            <td>
                                {{ category.total }}
                            </td>
                            <td>
                                {{ category.sources }}
                            </td>
                        </tr>
                    {% endfor %}

                </tbody>
            </table>
        </div>
    </section>
</div>
<div style="display:none;">
    <div id="trash"></div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('vendors/moment/moment.js') }}"></script>
    <script src="{{ asset('vendors/bootstrap-daterangepicker/daterangepicker.js') }}"></script>
    <script src="{{ asset('vendors/d3/d3.min.js') }}"></script>
    <script src="{{ asset('vendors/nvd3/build/nv.d3.min.js') }}"></script>
    <script src="{{ asset('vendors/datatables.net/js/jquery.dataTables.min.js') }}"></script>
    <script src="{{ asset('vendors/datatables.net-responsive/js/dataTables.responsive.min.js') }}"></script>
<script type="text/javascript">

$(function() {

    function cb(start, end) {
        $('#reportrange span').html(start.format('MMMM D, YYYY') + '-' + end.format('MMMM D, YYYY'));
    }
    cb(moment().subtract(29, 'days'), moment());

    $('#reportrange').daterangepicker({
        "locale": {
            "format": "DD/MM/YYYY",
            "separator": " - ",
            "applyLabel": "Appliquer",
            "cancelLabel": "Annuler",
            "fromLabel": "de",
            "toLabel": "à",
            "customRangeLabel": "Personnalisé",
            "daysOfWeek": [
                "Di",
                "Lu",
                "Ma",
                "Me",
                "Je",
                "Ve",
                "Sa"
            ],
            "monthNames": [
                "Janvier",
                "Fevrier",
                "Mars",
                "Avril",
                "Mai",
                "Juin",
                "Juillet",
                "Août",
                "Septembre",
                "Octobre",
                "Novembre",
                "Décembre"
            ],
            "firstDay": 1
        },
        "startDate": {% if start is defined %} "{{ start|date('d/m/Y') }}" {% else %}moment().subtract(29, 'days'){% endif %},
        "endDate": {% if end is defined %} "{{ end|date('d/m/Y') }}" {% else %}moment(){% endif %},
        ranges: {
            'Aujourd\'hui': [moment(), moment()],
            'Hier': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
            'Dernier 7 jours': [moment().subtract(6, 'days'), moment()],
            'Dernier 30 jours': [moment().subtract(29, 'days'), moment()],
            'Ce mois-ci': [moment().startOf('month'), moment().endOf('month')],
            'Mois dernier': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
        }
    }, cb);
    {% if categories is defined and categories %}
    var chartData = [
        {% for category in categories %}
        {% if loop.index < 7 %}
        {
            label:"{{ category.name|e('js') }}",value:{{ category.total }}
        },
        {% elseif loop.index == 7 %}
        {
            label:"{{ category.name|e('js') }}",value:{{ category.total }}
        }
        {% endif %}
        {% endfor %}
    ];

    var chart2Data = [

        {% for key in daysPrice|keys %}
        {"key":"{{ key|e('js') }}",
            "values": [{% for k, data in daysPrice[key] %}{"x":{{ k }}000 , "y":{{ data|number_format(5,'.',',') }} }{% if not loop.last %},{% endif %}{% endfor %}]
        }{% if not loop.last %},{% endif %}
        {% endfor %}

    ];
    var chart3Data = [

        {% for key in daysQuantity|keys %}
        {"key":"{{ key|e('js') }}",
            "values": [{% for k, data in daysQuantity[key] %}{"x":{{ k }}000 , "y":{{ data|number_format(5,'.',',') }} }{% if not loop.last %},{% endif %}{% endfor %}]
        }{% if not loop.last %},{% endif %}
        {% endfor %}

    ];

    var chart = nv.models.pieChart()
            .x(function(d) { return d.label })
            .y(function(d) { return d.value })
            .showLabels(false);

    d3.select("#chart svg")
            .datum(chartData.slice(0,3)).transition().duration(500).call(chart);


    var chart2 = nv.models.lineChart()
            .margin({right:40})  //Adjust chart margins to give the x-axis some breathing room.
            .useInteractiveGuideline(true)  //We want nice looking tooltips and a guideline!
            .showLegend(true)       //Show the legend, allowing users to turn on/off line series.
            .showYAxis(true)        //Show the y-axis
            .showXAxis(true)        //Show the x-axis
            ;

    chart2.xAxis
            .tickFormat(function(d) {
                return d3.time.format('%x')(new Date(d))
            });

    chart2.yAxis
            .tickFormat(d3.format('.1f'));



    d3.select('#chart2 svg')
            .datum(chart2Data.slice(0,3)).transition().duration(500).call(chart2);

    var chart3 = nv.models.lineChart()
            .margin({right: 40})  //Adjust chart margins to give the x-axis some breathing room.
            .useInteractiveGuideline(true)  //We want nice looking tooltips and a guideline!
            .showLegend(true)       //Show the legend, allowing users to turn on/off line series.
            .showYAxis(true)        //Show the y-axis
            .showXAxis(true)        //Show the x-axis
            ;

    chart3.xAxis
            .tickFormat(function(d) {
                return d3.time.format('%x')(new Date(d))
            });

    chart3.yAxis
            .tickFormat(d3.format('d'));



    d3.select('#chart3 svg')
            .datum(chart3Data.slice(0,3)).transition().duration(500).call(chart3);

    //TODO: Figure out a good way to do this automatically
    nv.utils.windowResize(chart.update);
    nv.utils.windowResize(chart2.update);
    nv.utils.windowResize(chart3.update);


    var table = $('#datatable').DataTable({
        "language": {
            "sProcessing":     "Traitement en cours...",
            "sSearch":         "Rechercher&nbsp;:",
            "sLengthMenu":     "Afficher _MENU_ &eacute;l&eacute;ments",
            "sInfo":           "Affichage de l'&eacute;l&eacute;ment _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments",
            "sInfoEmpty":      "Affichage de l'&eacute;l&eacute;ment 0 &agrave; 0 sur 0 &eacute;l&eacute;ment",
            "sInfoFiltered":   "(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)",
            "sInfoPostFix":    "",
            "sLoadingRecords": "Chargement en cours...",
            "sZeroRecords":    "Aucun &eacute;l&eacute;ment &agrave; afficher",
            "sEmptyTable":     "Aucune donn&eacute;e disponible dans le tableau",
            "oPaginate": {
                "sFirst":      "Premier",
                "sPrevious":   "Pr&eacute;c&eacute;dent",
                "sNext":       "Suivant",
                "sLast":       "Dernier"
            },
            "oAria": {
                "sSortAscending":  ": activer pour trier la colonne par ordre croissant",
                "sSortDescending": ": activer pour trier la colonne par ordre d&eacute;croissant"
            }
        }
    });


    table.columns().every( function () {
        var that = this;

        $( 'input', this.header() ).on( 'keyup change', function () {
            if ( that.search() !== this.value ) {
                that
                        .search( this.value )
                        .draw();
            }
        } );
    } );

    $('#toShow').change(function(){
        var id = $(this).val();
        $("[id^='chart']").fadeOut(500);
        $(id).fadeIn(700);
        chart.update();
        chart2.update();
        chart3.update();
    })
    $('#dataToShow').change(function(){
        d3.select('#chart svg')
                .datum(chartData.slice(0,$(this).val())).transition().duration(500).call(chart);
        d3.select('#chart2 svg')
                .datum(chart2Data.slice(0,$(this).val())).transition().duration(500).call(chart2);
        d3.select('#chart3 svg')
                .datum(chart3Data.slice(0,$(this).val())).transition().duration(500).call(chart3);

        chart.update();
        chart2.update();
        chart3.update();
    })

    {% endif %}
});
</script>
{% endblock %}
